<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cockpit.base">

  <resultMap id="processInstanceMap" type="org.camunda.bpm.cockpit.impl.plugin.base.dto.ProcessInstanceDto">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="businessKey" column="BUSINESS_KEY_" jdbcType="VARCHAR" />
    <result property="startTime" column="START_TIME_" jdbcType="TIMESTAMP"/>
    <collection property="incidents" javaType="java.util.ArrayList" ofType="org.camunda.bpm.cockpit.impl.plugin.base.dto.IncidentStatisticsDto">
      <result property="incidentType" column="INCIDENT_TYPE_" jdbcType="VARCHAR" />
      <result property="incidentCount" column="INCIDENT_COUNT_" jdbcType="INTEGER"/>
    </collection>
  </resultMap>

  <select id="selectRunningProcessInstancesIncludingIncidents" parameterType="org.camunda.bpm.cockpit.impl.plugin.base.query.parameter.ProcessInstanceQueryParameter"
          resultMap="processInstanceMap">
    select
      INSTANCE.ID_,
      INSTANCE.BUSINESS_KEY_,
      INSTANCE.START_TIME_,
      INCIDENT.INCIDENT_TYPE_,
      INCIDENT.INCIDENT_COUNT_
    from
      (
        <!-- This statement selects all process instances to an assigned process definition id (by using pagination!).-->
        ${limitBefore}
        select RES.* ${limitBetween},
        <if test="historyEnabled">
        HISTORY.START_TIME_
        </if>
        <if test="!historyEnabled">
        null START_TIME_
        </if>
        <include refid="selectProcessInstances"/>
        ${orderBy}
        ${limitAfter}
      ) INSTANCE
    <!-- The set of process instances will be (left) joined with a set of incidents. -->
    left join
      (
        <!-- to avoid to have a list of incidents with only one item which type is null and count is zero an extra subselect is needed -->
        <!-- this subselect selects all incidents to the assigned process definition id -->
        select
          INCIDENT.PROC_INST_ID_, INCIDENT.INCIDENT_TYPE_, count(INCIDENT.ID_) INCIDENT_COUNT_
        from
          ACT_RU_INCIDENT INCIDENT
        where
          INCIDENT.PROC_DEF_ID_ = #{processDefinitionId}
        group by
          INCIDENT.PROC_INST_ID_, INCIDENT.INCIDENT_TYPE_
      ) INCIDENT
    on
      INSTANCE.ID_ = INCIDENT.PROC_INST_ID_
  </select>
  
  <sql id="selectProcessInstances">
    from
      ${prefix}ACT_RU_EXECUTION RES
    <if test="historyEnabled">
    left join
      ${prefix}ACT_HI_PROCINST HISTORY
    ON 
      RES.ID_ = HISTORY.PROC_INST_ID_
    </if>
    where
      RES.ID_ = RES.PROC_INST_ID_ and
      RES.PROC_DEF_ID_ = #{processDefinitionId}
  </sql>

</mapper>
